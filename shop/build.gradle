plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.openapi.generator" version "7.12.0"
}

group = 'com.example'
version = '0.0.2-SNAPSHOT'
description = 'shop'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

openApiGenerate {
    generatorName.set("java")
    configOptions.set([ library: 'restclient' ])
    inputSpec.set("$projectDir/src/main/resources/api-spec.yaml")
    outputDir.set("$projectDir/build/generated")
    modelPackage.set("main.codegen.com.example.api.model")
    apiPackage.set("main.codegen.com.example.api")
    configOptions.set([
            sourceFolder: "src/gen/java",
            openApiNullable: "false",
            library: "webclient",
            useJakartaEe: "true",
            lombok: "true"
    ])
}

sourceSets {
    main {
        java {
            srcDir "$projectDir/build/generated/src/gen/java"
        }
    }
}

tasks.named('compileJava') {
    dependsOn(tasks.openApiGenerate)
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.data:spring-data-relational'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.modelmapper:modelmapper:2.3.5'
    implementation 'io.r2dbc:r2dbc-pool'
    implementation 'org.synchronoss.cloud:nio-multipart-parser:1.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.28'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.4.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.8.5'
    implementation 'io.lettuce:lettuce-core'
    implementation 'io.netty:netty-all:4.1.94.Final'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok:1.18.26'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation "org.springframework.boot:spring-boot-testcontainers"
    testImplementation "org.testcontainers:postgresql"
    testImplementation "org.testcontainers:r2dbc"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.springframework.security:spring-security-test"
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
    bootJar.enabled = true
}